// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: pkg/grpc/device-watcher.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NicDevice_DeviceStatus int32

const (
	NicDevice_UP   NicDevice_DeviceStatus = 0
	NicDevice_Down NicDevice_DeviceStatus = 1
)

// Enum value maps for NicDevice_DeviceStatus.
var (
	NicDevice_DeviceStatus_name = map[int32]string{
		0: "UP",
		1: "Down",
	}
	NicDevice_DeviceStatus_value = map[string]int32{
		"UP":   0,
		"Down": 1,
	}
)

func (x NicDevice_DeviceStatus) Enum() *NicDevice_DeviceStatus {
	p := new(NicDevice_DeviceStatus)
	*p = x
	return p
}

func (x NicDevice_DeviceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NicDevice_DeviceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_grpc_device_watcher_proto_enumTypes[0].Descriptor()
}

func (NicDevice_DeviceStatus) Type() protoreflect.EnumType {
	return &file_pkg_grpc_device_watcher_proto_enumTypes[0]
}

func (x NicDevice_DeviceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NicDevice_DeviceStatus.Descriptor instead.
func (NicDevice_DeviceStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_grpc_device_watcher_proto_rawDescGZIP(), []int{0, 0}
}

type NicDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string                 `protobuf:"bytes,1,opt,name=DeviceName,proto3" json:"DeviceName,omitempty"`
	MacAddress string                 `protobuf:"bytes,2,opt,name=MacAddress,proto3" json:"MacAddress,omitempty"`
	Ipaddress  []string               `protobuf:"bytes,3,rep,name=Ipaddress,proto3" json:"Ipaddress,omitempty"`
	Status     NicDevice_DeviceStatus `protobuf:"varint,5,opt,name=Status,proto3,enum=device_watcher.NicDevice_DeviceStatus" json:"Status,omitempty"`
}

func (x *NicDevice) Reset() {
	*x = NicDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_watcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NicDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NicDevice) ProtoMessage() {}

func (x *NicDevice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_watcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NicDevice.ProtoReflect.Descriptor instead.
func (*NicDevice) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_watcher_proto_rawDescGZIP(), []int{0}
}

func (x *NicDevice) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *NicDevice) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NicDevice) GetIpaddress() []string {
	if x != nil {
		return x.Ipaddress
	}
	return nil
}

func (x *NicDevice) GetStatus() NicDevice_DeviceStatus {
	if x != nil {
		return x.Status
	}
	return NicDevice_UP
}

type BlockDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BlockDevice) Reset() {
	*x = BlockDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_watcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDevice) ProtoMessage() {}

func (x *BlockDevice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_watcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDevice.ProtoReflect.Descriptor instead.
func (*BlockDevice) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_watcher_proto_rawDescGZIP(), []int{1}
}

type NicDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nicdevices []*NicDevice `protobuf:"bytes,1,rep,name=nicdevices,proto3" json:"nicdevices,omitempty"`
}

func (x *NicDevices) Reset() {
	*x = NicDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_watcher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NicDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NicDevices) ProtoMessage() {}

func (x *NicDevices) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_watcher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NicDevices.ProtoReflect.Descriptor instead.
func (*NicDevices) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_watcher_proto_rawDescGZIP(), []int{2}
}

func (x *NicDevices) GetNicdevices() []*NicDevice {
	if x != nil {
		return x.Nicdevices
	}
	return nil
}

type BlockDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockdevices []*BlockDevice `protobuf:"bytes,1,rep,name=blockdevices,proto3" json:"blockdevices,omitempty"`
}

func (x *BlockDevices) Reset() {
	*x = BlockDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_watcher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDevices) ProtoMessage() {}

func (x *BlockDevices) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_watcher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDevices.ProtoReflect.Descriptor instead.
func (*BlockDevices) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_watcher_proto_rawDescGZIP(), []int{3}
}

func (x *BlockDevices) GetBlockdevices() []*BlockDevice {
	if x != nil {
		return x.Blockdevices
	}
	return nil
}

type Null struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Null) Reset() {
	*x = Null{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_watcher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Null) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Null) ProtoMessage() {}

func (x *Null) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_watcher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Null.ProtoReflect.Descriptor instead.
func (*Null) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_watcher_proto_rawDescGZIP(), []int{4}
}

var File_pkg_grpc_device_watcher_proto protoreflect.FileDescriptor

var file_pkg_grpc_device_watcher_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x22,
	0xcb, 0x01, 0x0a, 0x09, 0x4e, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x49, 0x70, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4e, 0x69, 0x63,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x20, 0x0a, 0x0c, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x55,
	0x50, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x6f, 0x77, 0x6e, 0x10, 0x01, 0x22, 0x0d, 0x0a,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x47, 0x0a, 0x0a,
	0x4e, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x69,
	0x63, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x4e, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x6e, 0x69, 0x63, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x75, 0x6c, 0x6c, 0x32, 0x93,
	0x01, 0x0a, 0x07, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0d, 0x53, 0x63,
	0x61, 0x6e, 0x4e, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x1a, 0x1a, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x4e, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x45, 0x0a,
	0x0f, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x1c, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpc_device_watcher_proto_rawDescOnce sync.Once
	file_pkg_grpc_device_watcher_proto_rawDescData = file_pkg_grpc_device_watcher_proto_rawDesc
)

func file_pkg_grpc_device_watcher_proto_rawDescGZIP() []byte {
	file_pkg_grpc_device_watcher_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_device_watcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpc_device_watcher_proto_rawDescData)
	})
	return file_pkg_grpc_device_watcher_proto_rawDescData
}

var file_pkg_grpc_device_watcher_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_grpc_device_watcher_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_grpc_device_watcher_proto_goTypes = []interface{}{
	(NicDevice_DeviceStatus)(0), // 0: device_watcher.NicDevice.DeviceStatus
	(*NicDevice)(nil),           // 1: device_watcher.NicDevice
	(*BlockDevice)(nil),         // 2: device_watcher.BlockDevice
	(*NicDevices)(nil),          // 3: device_watcher.NicDevices
	(*BlockDevices)(nil),        // 4: device_watcher.BlockDevices
	(*Null)(nil),                // 5: device_watcher.Null
}
var file_pkg_grpc_device_watcher_proto_depIdxs = []int32{
	0, // 0: device_watcher.NicDevice.Status:type_name -> device_watcher.NicDevice.DeviceStatus
	1, // 1: device_watcher.NicDevices.nicdevices:type_name -> device_watcher.NicDevice
	2, // 2: device_watcher.BlockDevices.blockdevices:type_name -> device_watcher.BlockDevice
	5, // 3: device_watcher.Scanner.ScanNicDevice:input_type -> device_watcher.Null
	5, // 4: device_watcher.Scanner.ScanBlockDevice:input_type -> device_watcher.Null
	3, // 5: device_watcher.Scanner.ScanNicDevice:output_type -> device_watcher.NicDevices
	4, // 6: device_watcher.Scanner.ScanBlockDevice:output_type -> device_watcher.BlockDevices
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_grpc_device_watcher_proto_init() }
func file_pkg_grpc_device_watcher_proto_init() {
	if File_pkg_grpc_device_watcher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpc_device_watcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NicDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_watcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_watcher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NicDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_watcher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_watcher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Null); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpc_device_watcher_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_device_watcher_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_device_watcher_proto_depIdxs,
		EnumInfos:         file_pkg_grpc_device_watcher_proto_enumTypes,
		MessageInfos:      file_pkg_grpc_device_watcher_proto_msgTypes,
	}.Build()
	File_pkg_grpc_device_watcher_proto = out.File
	file_pkg_grpc_device_watcher_proto_rawDesc = nil
	file_pkg_grpc_device_watcher_proto_goTypes = nil
	file_pkg_grpc_device_watcher_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ScannerClient is the client API for Scanner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScannerClient interface {
	ScanNicDevice(ctx context.Context, in *Null, opts ...grpc.CallOption) (*NicDevices, error)
	ScanBlockDevice(ctx context.Context, in *Null, opts ...grpc.CallOption) (*BlockDevices, error)
}

type scannerClient struct {
	cc grpc.ClientConnInterface
}

func NewScannerClient(cc grpc.ClientConnInterface) ScannerClient {
	return &scannerClient{cc}
}

func (c *scannerClient) ScanNicDevice(ctx context.Context, in *Null, opts ...grpc.CallOption) (*NicDevices, error) {
	out := new(NicDevices)
	err := c.cc.Invoke(ctx, "/device_watcher.Scanner/ScanNicDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scannerClient) ScanBlockDevice(ctx context.Context, in *Null, opts ...grpc.CallOption) (*BlockDevices, error) {
	out := new(BlockDevices)
	err := c.cc.Invoke(ctx, "/device_watcher.Scanner/ScanBlockDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScannerServer is the server API for Scanner service.
type ScannerServer interface {
	ScanNicDevice(context.Context, *Null) (*NicDevices, error)
	ScanBlockDevice(context.Context, *Null) (*BlockDevices, error)
}

// UnimplementedScannerServer can be embedded to have forward compatible implementations.
type UnimplementedScannerServer struct {
}

func (*UnimplementedScannerServer) ScanNicDevice(context.Context, *Null) (*NicDevices, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScanNicDevice not implemented")
}
func (*UnimplementedScannerServer) ScanBlockDevice(context.Context, *Null) (*BlockDevices, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScanBlockDevice not implemented")
}

func RegisterScannerServer(s *grpc.Server, srv ScannerServer) {
	s.RegisterService(&_Scanner_serviceDesc, srv)
}

func _Scanner_ScanNicDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScannerServer).ScanNicDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device_watcher.Scanner/ScanNicDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScannerServer).ScanNicDevice(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scanner_ScanBlockDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScannerServer).ScanBlockDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device_watcher.Scanner/ScanBlockDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScannerServer).ScanBlockDevice(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scanner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "device_watcher.Scanner",
	HandlerType: (*ScannerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScanNicDevice",
			Handler:    _Scanner_ScanNicDevice_Handler,
		},
		{
			MethodName: "ScanBlockDevice",
			Handler:    _Scanner_ScanBlockDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/grpc/device-watcher.proto",
}
